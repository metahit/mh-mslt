by=c("age","sex","age_group")) %>%
inner_join(non_disease_combined,
by=c("age","sex","age_group"))
### Present changes in life expectancy, life years, health-adjusted life years and burden by cause (diseases and non-diseases) by age and sex cohort
#### Summary data frame by age and sex and total
######## Dataframe with all outputs aggregated by year of simlation by sex
output_df_agg_sex  <- output_df   %>% ### Create a simulation year columns
group_by(age_group, sex, .add=TRUE) %>%
dplyr::mutate(year = 1:dplyr::n()) %>%
ungroup() %>%
dplyr::select(sex, year, Lx_bl, Lx_sc, Lx_diff, Lwx_bl, Lwx_sc, Lwx_diff, contains("num")) %>%
group_by(year, sex, .add=TRUE) %>%
summarise_if(is.numeric, funs(sum)) %>%
ungroup()
#
# ######## Dataframe with all outputs aggregated by year of simulation all
output_df_agg_all  <- output_df   %>% ### Create a simulation year columns
group_by(age_group, sex, .add=TRUE) %>%
dplyr::mutate(year = 1:dplyr::n()) %>%
ungroup() %>%
dplyr::select(sex, year, Lx_bl, Lx_sc, Lx_diff, Lwx_bl, Lwx_sc, Lwx_diff, contains("num")) %>%
group_by(year, .add=TRUE) %>%
summarise_if(is.numeric, funs(sum)) %>%
ungroup()
### Create age groups variable, easier to read
output_df <- output_df %>%
mutate(age_group_2 = case_when(
age_group == 17 ~ "16-19",
age_group == 22 ~ "20-24",
age_group == 27 ~ "25-29",
age_group == 32 ~ "30-34",
age_group == 37 ~ "35-39",
age_group == 42 ~ "40-44",
age_group == 47 ~ "45-49",
age_group == 52 ~ "50-54",
age_group == 57 ~ "55-59",
age_group == 62 ~ "60-64",
age_group == 67 ~ "65-69",
age_group == 72 ~ "70-74",
age_group == 77 ~ "75-79",
age_group == 82 ~ "80-84",
age_group == 87 ~ "85-89",
age_group == 92 ~ "90-94",
age_group == 97 ~ "95 plus")) %>%
mutate(cohort=paste(sex, age_group, sep = "_"))
population <- mslt_df %>% dplyr::select(age_cat, sex, population_number) %>%
dplyr::filter(population_number!=0) %>%
dplyr::rename(age_group=age_cat)
output_df <- output_df %>% left_join(population)%>%
dplyr::rename(`Age group` = age_group_2)
##################### Below outcomes for presentation ####################################################
# Table: Life expectancy and health adjusted life expectancy
output_life_expectancy_change <- output_df[!duplicated(output_df$cohort), c("Age group", "cohort", "sex", "ex_bl", "ex_sc", "ewx_bl", "ewx_sc", "ex_diff", "ewx_diff", "population_number")] %>%
dplyr::rename(`Life expectancy at baseline` = ex_bl,
`Life expectancy scenario` = ex_sc,
`Health adjusted life expectancy baseline` = ewx_bl,
`Health adjusted life expectancy scenario` = ewx_sc) %>%
dplyr::mutate(`Difference in life expectancy in days` = ex_diff * 365,
`Difference in health adjusted life expectancy in days` = ewx_diff* 365) %>%
mutate_if(is.numeric, round, digits = 3) %>%
dplyr::select(-c(ex_diff, ewx_diff, cohort)) %>%
relocate(population_number, .after = sex)%>%
dplyr::rename('Population cohort'=population_number)
output_life_expectancy_change <- output_life_expectancy_change[order(output_life_expectancy_change$sex),]
# Table: Life years and health adjusted life years ----
output_life_years_change <- output_df %>%
group_by(sex, `Age group`, cohort, .add=TRUE) %>%
summarise_if(is.numeric, funs(sum)) %>%
ungroup() %>%
dplyr::select(`Age group`,cohort, sex,Lx_diff, Lwx_diff, population_number) %>%
dplyr::rename(`Life years` = Lx_diff,
`Health adjusted life years` = Lwx_diff)  %>%
mutate_if(is.numeric, round) %>%
relocate(population_number, .after = sex)%>%
dplyr::rename('Population cohort'=population_number) %>%
dplyr::select(-cohort)
# Table: Diseases deaths, incidence and ylds ----
output_diseases_change <- output_df %>%
group_by(sex, `Age group`, cohort, .add=TRUE) %>%
summarise_if(is.numeric, funs(sum)) %>%
mutate_if(is.numeric, round) %>%
relocate(population_number, .after = sex)%>%
dplyr::rename('Population cohort'=population_number) %>%
dplyr::select(-cohort) %>%
dplyr::select(`Age group`, sex, contains("diff")) %>%
dplyr::select(-contains(c("Lx", "Lwx", "ex")))
### Incidence
data_f <- dplyr::filter(output_df_agg_sex, sex == "female") %>% dplyr::select("sex", "year", contains("diff"))
data_m <- dplyr::filter(output_df_agg_sex, sex == "male") %>% dplyr::select("sex", "year", contains("diff"))
data_t <- output_df_agg_all %>% dplyr::select("year", contains("diff")) %>%
mutate(sex ="total")
data <- bind_rows(data_f, data_m, data_t)
plot_1 <- data %>%
ggplot(aes(x = year)) +
geom_smooth(aes(y = inc_num_diff_brsc,method = "loess", color="Breast cancer")) +
geom_smooth(aes(y = inc_num_diff_carc, method = "loess", color="Colon cancer")) +
geom_smooth(aes(y = inc_num_diff_dmt2, method = "loess", color="Type 2 diabetes")) +
geom_smooth(aes(y = inc_num_diff_tbalc, method = "loess", color="Lung cancer")) +
geom_smooth(aes(y = inc_num_diff_utrc, method = "loess", color="Uterine cancer")) +
geom_smooth(aes(y = inc_num_diff_ishd, method = "loess", color="Ischemic heart disease")) +
geom_smooth(aes(y = inc_num_diff_strk, method = "loess", color="Stroke")) +
geom_smooth(aes(y = inc_num_diff_copd, method = "loess", color="COPD")) +
labs(x = "Simulation year",
title = paste("Changes in disease incidence over time"),
y = "Numbers") +
labs(color="") +
theme(plot.title = element_text(hjust = 0.5, size = 12,face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=10)) +
theme_classic() +
geom_hline(yintercept=0, linetype='dashed', color = 'black')+
facet_wrap(. ~ sex) +
theme(
strip.background = element_blank() ) +
scale_fill_brewer(name = "Sex") +
theme(legend.position = "bottom",
legend.text = element_text(colour = "black", size = 8),
legend.key = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
plot_1
ggsave(plot_1, file=paste0("./output/graphs/incidence.png"), width = 14, height = 10, units = "cm")
### Deaths
plot_2 <- data %>%
ggplot(aes(x = year)) +
geom_smooth(aes(y = mx_num_diff_brsc,method = "loess", color="Breast cancer")) +
geom_smooth(aes(y = mx_num_diff_carc, method = "loess", color="Colon cancer")) +
geom_smooth(aes(y = mx_num_diff_dmt2, method = "loess", color="Type 2 diabetes")) +
geom_smooth(aes(y = mx_num_diff_tbalc, method = "loess", color="Lung cancer")) +
geom_smooth(aes(y = mx_num_diff_utrc, method = "loess", color="Uterine cancer")) +
geom_smooth(aes(y = mx_num_diff_ishd, method = "loess", color="Ischemic heart disease")) +
geom_smooth(aes(y = mx_num_diff_strk, method = "loess", color="Stroke")) +
geom_smooth(aes(y = mx_num_diff_copd, method = "loess", color="COPD")) +
labs(x = "Simulation year",
title = paste("Changes in disease mortality over time"),
y = "Numbers") +
labs(color="") +
theme(plot.title = element_text(hjust = 0.5, size = 12,face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=10)) +
theme_classic() +
geom_hline(yintercept=0, linetype='dashed', color = 'black')+
facet_wrap(. ~ sex) +
theme(
strip.background = element_blank() ) +
scale_fill_brewer(name = "Sex") +
theme(legend.position = "bottom",
legend.text = element_text(colour = "black", size = 8),
legend.key = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
plot_2
ggsave(plot_2, file=paste0("./output/graphs/deaths.png"), width = 14, height = 10, units = "cm")
#### Graph for changes in life years
data_f <- dplyr::filter(output_df_agg_sex, sex == "female") %>% dplyr::select("sex", "year", "Lx_diff", "Lwx_diff")
data_m <- dplyr::filter(output_df_agg_sex, sex == "male") %>% dplyr::select("sex", "year", "Lx_diff", "Lwx_diff")
data_t <-  output_df_agg_all %>% dplyr::select("year", "Lx_diff", "Lwx_diff")
plot_3 <- data_t %>%
ggplot(aes(x = year, y = Lx_diff)) +
geom_smooth(method = "loess", aes(color= "Life years total")) +
geom_smooth(data = data_t, aes(y = Lwx_diff, method = "loess",  color= "HALYs total")) +
geom_smooth(data = data_f, aes(y = Lx_diff,  method = "loess",  color= "Life years female")) +
geom_smooth(data = data_f, aes(y = Lwx_diff,  method = "loess",  color= "HALYs female")) +
geom_smooth(data = data_m, aes(y = Lx_diff,  method = "loess",  color= "Life years male")) +
geom_smooth(data = data_m, aes(y = Lwx_diff,  method = "loess",  color= "HALYs male")) +
labs(x = "Simulation year",
title = paste("Difference life years and health-adjusted life years"),
y = "Numbers") +
labs(color="") +
theme(plot.title = element_text(hjust = 0.5, size = 12,face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=10)) +
theme(legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(colour = "black", size = 10),
legend.key = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme_classic() +
geom_hline(yintercept=0, linetype='dashed', color = 'black')
plot_3
ggsave(plot_3, file=paste0("./output/lifeyears.png"), width = 14, height = 10, units = "cm")
source(paste0(relative_path_mslt, "R/RunMSLT.R"))
#### Graphs for changes in diseases over time
outputs <- RunMSLT(
mslt_df=read_csv("C:\\Metahit\\mh-execute\\inputs\\mslt\\bristol_mslt.csv"),
disease_names=readRDS("C:\\Metahit\\mh-mslt\\output\\parameters\\DISEASE_SHORT_NAMES.rds"),
i_sex=c("male", "female"),
i_age_cohort=seq(from=17, to=97, by =5),
pif=read_csv("C:\\Metahit\\mh-mslt\\input\\pif.csv")
)
#### Summary data frame by age and sex and total
######## Dataframe with all outputs aggregated by year of simlation by sex
output_df_agg_sex  <- output_df   %>% ### Create a simulation year columns
group_by(age_group, sex, .add=TRUE) %>%
dplyr::mutate(year = 1:dplyr::n()) %>%
ungroup() %>%
dplyr::select(sex, year, Lx_bl, Lx_sc, Lx_diff, Lwx_bl, Lwx_sc, Lwx_diff, contains("num")) %>%
group_by(year, sex, .add=TRUE) %>%
summarise_if(is.numeric, funs(sum)) %>%
ungroup()
#
# ######## Dataframe with all outputs aggregated by year of simulation all
output_df_agg_all  <- output_df   %>% ### Create a simulation year columns
group_by(age_group, sex, .add=TRUE) %>%
dplyr::mutate(year = 1:dplyr::n()) %>%
ungroup() %>%
dplyr::select(sex, year, Lx_bl, Lx_sc, Lx_diff, Lwx_bl, Lwx_sc, Lwx_diff, contains("num")) %>%
group_by(year, .add=TRUE) %>%
summarise_if(is.numeric, funs(sum)) %>%
ungroup()
### Create age groups variable, easier to read
output_df <- output_df %>%
mutate(age_group_2 = case_when(
age_group == 17 ~ "16-19",
age_group == 22 ~ "20-24",
age_group == 27 ~ "25-29",
age_group == 32 ~ "30-34",
age_group == 37 ~ "35-39",
age_group == 42 ~ "40-44",
age_group == 47 ~ "45-49",
age_group == 52 ~ "50-54",
age_group == 57 ~ "55-59",
age_group == 62 ~ "60-64",
age_group == 67 ~ "65-69",
age_group == 72 ~ "70-74",
age_group == 77 ~ "75-79",
age_group == 82 ~ "80-84",
age_group == 87 ~ "85-89",
age_group == 92 ~ "90-94",
age_group == 97 ~ "95 plus")) %>%
mutate(cohort=paste(sex, age_group, sep = "_"))
population <- mslt_df %>% dplyr::select(age_cat, sex, population_number) %>%
dplyr::filter(population_number!=0) %>%
dplyr::rename(age_group=age_cat)
output_df <- output_df %>% left_join(population)%>%
dplyr::rename(`Age group` = age_group_2)
output_df_agg_sex  <- output_df   %>% ### Create a simulation year columns
group_by(age_group, sex, .add=TRUE) %>%
dplyr::mutate(year = 1:dplyr::n()) %>%
ungroup() %>%
dplyr::select(sex, year, Lx_bl, Lx_sc, Lx_diff, Lwx_bl, Lwx_sc, Lwx_diff, contains("num")) %>%
group_by(year, sex, .add=TRUE) %>%
summarise_if(is.numeric, funs(sum)) %>%
ungroup()
#
source(paste0(relative_path_mslt, "R/RunMSLT.R"))
#### Graphs for changes in diseases over time
outputs <- RunMSLT(
mslt_df=read_csv("C:\\Metahit\\mh-execute\\inputs\\mslt\\bristol_mslt.csv"),
disease_names=readRDS("C:\\Metahit\\mh-mslt\\output\\parameters\\DISEASE_SHORT_NAMES.rds"),
i_sex=c("male", "female"),
i_age_cohort=seq(from=17, to=97, by =5),
pif=read_csv("C:\\Metahit\\mh-mslt\\input\\pif.csv")
)
library(knitr)
library(kableExtra)
library(plyr)
library(lubridate)
library(ggplot2)
library(ggjoy)
library(ggpubr)
library(plm)
library(PerformanceAnalytics)
library(pander)
library(dplyr)
library(tidyr)
library(tibble)
library(knitr)
library(readxl)
library(stringr)
library(Hmisc)
library(DiagrammeR)
library(tinytex)
library(tibble)
library(readr)
options(scipen = 999)
install.packages(c("kableExtra", "knitr", "readr", "tibble"))
install.packages(c("bibtex", "kableExtra", "knitr", "readr", "stringi", "tinytex"))
mslt_df=read_csv("C:\\Metahit\\mh-execute\\inputs\\mslt\\bristol_mslt.csv")
library(knitr)
library(kableExtra)
library(plyr)
library(lubridate)
library(ggplot2)
library(ggjoy)
library(ggpubr)
library(plm)
library(PerformanceAnalytics)
library(pander)
library(dplyr)
library(tidyr)
library(tibble)
library(knitr)
library(readxl)
library(stringr)
library(Hmisc)
library(DiagrammeR)
library(tinytex)
library(tibble)
library(readr)
options(scipen = 999)
mslt_df=read_csv("C:\\Metahit\\mh-execute\\inputs\\mslt\\bristol_mslt.csv")
mslt_df=read_csv("C:\\Metahit\\mh-execute\\inputs\\mslt\\bristol_mslt.csv")
source(paste0(relative_path_mslt, "R/RunMSLT.R"))
#### Graphs for changes in diseases over time
outputs <- RunMSLT(
mslt_df=read_csv("C:\\Metahit\\mh-execute\\inputs\\mslt\\bristol_mslt.csv"),
disease_names=readRDS("C:\\Metahit\\mh-mslt\\output\\parameters\\DISEASE_SHORT_NAMES.rds"),
i_sex=c("male", "female"),
i_age_cohort=seq(from=17, to=97, by =5),
pif=read_csv("C:\\Metahit\\mh-mslt\\input\\pif.csv")
)
rm (list = ls())
options(scipen=999)
options("getSymbols.warning4.0"=FALSE)
mypath <- 'C:/Metahit/'
relative_path_execute <- paste0(mypath,'mh-execute')
relative_path_gbd <- paste0(mypath,'mh-mslt/input/gbd/GBD2017/METAHIT/')
relative_path_mslt <- paste0(mypath,'mh-mslt/')
library(knitr)
library(kableExtra)
library(plyr)
library(lubridate)
library(ggplot2)
library(ggjoy)
library(ggpubr)
library(plm)
library(PerformanceAnalytics)
library(pander)
library(dplyr)
library(tidyr)
library(tibble)
library(knitr)
library(readxl)
library(stringr)
library(Hmisc)
library(DiagrammeR)
library(tinytex)
library(tibble)
library(readr)
options(scipen = 999)
## Global options
options(scipen=999)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
knitr::opts_chunk$set(echo = TRUE, width = 100)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
pmslt_inputs <- tribble(
~Component, ~"Data needs", ~"Input data", ~"Data processing",
"General life table", "Population numbers and mortality rates", "Population and all-cause mortality by age-group (5 years) and sex", "Population numbers by 5-year age groups and sex were derived from GBD data for rates (per 100,000) and numbers data (i.e. number*100,000/rate). For the English city regions data is avaialbe for Lower Tier Local Authority (LTLA) and Upper Tier Local Authority (UTLA). Population numbers for LTLA and UTLA were aggregated to City Regions. For UK, Scotland, Wales and England Regions no futher steps were required. Mortality rates per one were derived by diving all-cause mortality rates by population numbers by age and sex. Interpolation was used to derived single-year mortality rates from 5-year data.",
"General life table", "All-cause YLDs", "All-cause pYLDs by 5-year age groups and sex", "Rates per one derived from numbers and population data and interpolated to one-year age groups. Same aggreagation process as for mortlaity was used for City Regions.",
"Disease life table", "Diseases: Disability weights, incidence and case fatality", "Disease specific pYLDs and prevalence. Incidence and case fatality were derived using Disbayes", "Section XX outlines Disbayes process. Disability weights were calculated by dividing disease specific pYLDs by prevalence and adjusted by all cause pYLDs for 5-year age groups and sex and then interpolated to 1-year age groups.",
"Injuries: pYLDs and mortality rates", "PYLDs and mortality rates for road injures for pedestrians, cyclist, COMPLETE", "pYLD and mortality numbers by 5-year age group and sex", "Rates per one derived from numbers and population data and interpolated to 1-year age groups",
"Diseases trends", "TO DO","TO DO", "Explained in sections Trends"
)
kable(pmslt_inputs, booktabs = T, caption = " Table 1: PMSLT inputs", longtable = TRUE) %>%
column_spec(1:2, width = "7em") %>%
column_spec(3:4, width = "15em") %>%
row_spec(0, bold = T)  %>%
kable_styling()
inputs_outputs <- tribble(
~"R file", ~"Function", ~"Input variable", ~"Input file", ~"Output variable", ~"Output file",
"mh-mslt\\R\\prepare_GEO.R", "GetGEO", "data_local", "mh-execute\\input\\mh_regions_lad_lookup.csv", "local_goverment_areas", "N\\A",
"mh-mslt\\R\\organise_GBD.R", "GetGBD", "path and local_goverment_area", "mh-mslt\\input\\gbd\\METAHIT...local_goverment_areas", "gbd", "N\\A",
"mh-mslt\\R\\get_disease_names.R", "GetDiseaseTable", "disease_names_execute", "mh-execute\\inputs\\dose_response\\disease_outcomes_lookup.csv", "DISEASE_SHORT_NAMES", "mh-mslt\\output\\paramters\\DISEASE_SHORT_NAMES",
"mh-metahit\\R\\prepare_GBD.R", "calculateGBDwider", "gbd, local and government_areas", "gbd and local_goverment_areas", "gbd_wider", "N\\A",
"mh-metahit\\R\\prepare_GBD.R", "calculateMSLT" , "gbd_wider and location-disease", "gbd_wider, location (cityregion)  and DISEASE_SHORT_NAMES", "mslt_df_wider", "mh-execute\\inputs\\mslt"
)
kable(inputs_outputs, booktabs = T, caption = " Table 2: Inputs and outputs", longtable = TRUE) %>%
row_spec(0, bold = T)  %>%
kable_styling()
outputs <- outputs
source(paste0(relative_path_mslt, "R/RunMSLT.R"))
#### Graphs for changes in diseases over time
outputs <- RunMSLT(
mslt_df=read_csv("C:\\Metahit\\mh-execute\\inputs\\mslt\\bristol_mslt.csv"),
disease_names=readRDS("C:\\Metahit\\mh-mslt\\output\\parameters\\DISEASE_SHORT_NAMES.rds"),
i_sex=c("male", "female"),
i_age_cohort=seq(from=17, to=97, by =5),
pif=read_csv("C:\\Metahit\\mh-mslt\\input\\pif.csv")
)
## Global options
options(scipen=999)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
knitr::opts_chunk$set(echo = TRUE, width = 100)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(knitr)
library(kableExtra)
library(plyr)
library(lubridate)
library(ggplot2)
library(ggjoy)
library(ggpubr)
library(plm)
library(PerformanceAnalytics)
library(pander)
library(dplyr)
library(tidyr)
library(tibble)
library(knitr)
library(readxl)
library(stringr)
library(Hmisc)
library(DiagrammeR)
library(tinytex)
library(tibble)
library(readr)
options(scipen = 999)
rm (list = ls())
mypath <- 'C:/Metahit/'
relative_path_execute <- paste0(mypath,'mh-execute')
relative_path_gbd <- paste0(mypath,'mh-mslt/input/gbd/GBD2017/METAHIT/')
relative_path_mslt <- paste0(mypath,'mh-mslt/')
## Global options
options(scipen=999)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
knitr::opts_chunk$set(echo = TRUE, width = 100)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
pmslt_inputs <- tribble(
~Component, ~"Data needs", ~"Input data", ~"Data processing",
"General life table", "Population numbers and mortality rates", "Population and all-cause mortality by age-group (5 years) and sex", "Population numbers by 5-year age groups and sex were derived from GBD data for rates (per 100,000) and numbers data (i.e. number*100,000/rate). For the English city regions data is avaialbe for Lower Tier Local Authority (LTLA) and Upper Tier Local Authority (UTLA). Population numbers for LTLA and UTLA were aggregated to City Regions. For UK, Scotland, Wales and England Regions no futher steps were required. Mortality rates per one were derived by diving all-cause mortality rates by population numbers by age and sex. Interpolation was used to derived single-year mortality rates from 5-year data.",
"General life table", "All-cause YLDs", "All-cause pYLDs by 5-year age groups and sex", "Rates per one derived from numbers and population data and interpolated to one-year age groups. Same aggreagation process as for mortlaity was used for City Regions.",
"Disease life table", "Diseases: Disability weights, incidence and case fatality", "Disease specific pYLDs and prevalence. Incidence and case fatality were derived using Disbayes", "Section XX outlines Disbayes process. Disability weights were calculated by dividing disease specific pYLDs by prevalence and adjusted by all cause pYLDs for 5-year age groups and sex and then interpolated to 1-year age groups.",
"Injuries: pYLDs and mortality rates", "PYLDs and mortality rates for road injures for pedestrians, cyclist, COMPLETE", "pYLD and mortality numbers by 5-year age group and sex", "Rates per one derived from numbers and population data and interpolated to 1-year age groups",
"Diseases trends", "TO DO","TO DO", "Explained in sections Trends"
)
kable(pmslt_inputs, booktabs = T, caption = " Table 1: PMSLT inputs", longtable = TRUE) %>%
column_spec(1:2, width = "7em") %>%
column_spec(3:4, width = "15em") %>%
row_spec(0, bold = T)  %>%
kable_styling()
inputs_outputs <- tribble(
~"R file", ~"Function", ~"Input variable", ~"Input file", ~"Output variable", ~"Output file",
"mh-mslt\\R\\prepare_GEO.R", "GetGEO", "data_local", "mh-execute\\input\\mh_regions_lad_lookup.csv", "local_goverment_areas", "N\\A",
"mh-mslt\\R\\organise_GBD.R", "GetGBD", "path and local_goverment_area", "mh-mslt\\input\\gbd\\METAHIT...local_goverment_areas", "gbd", "N\\A",
"mh-mslt\\R\\get_disease_names.R", "GetDiseaseTable", "disease_names_execute", "mh-execute\\inputs\\dose_response\\disease_outcomes_lookup.csv", "DISEASE_SHORT_NAMES", "mh-mslt\\output\\paramters\\DISEASE_SHORT_NAMES",
"mh-metahit\\R\\prepare_GBD.R", "calculateGBDwider", "gbd, local and government_areas", "gbd and local_goverment_areas", "gbd_wider", "N\\A",
"mh-metahit\\R\\prepare_GBD.R", "calculateMSLT" , "gbd_wider and location-disease", "gbd_wider, location (cityregion)  and DISEASE_SHORT_NAMES", "mslt_df_wider", "mh-execute\\inputs\\mslt"
)
kable(inputs_outputs, booktabs = T, caption = " Table 2: Inputs and outputs", longtable = TRUE) %>%
row_spec(0, bold = T)  %>%
kable_styling()
library(tidyverse)
library(progress)
library(disbayes)
DISEASE_SHORT_NAMES <- readRDS("C:/Metahit/mh-mslt/input/gbd/GBD2017/METAHIT/DISEASE_SHORT_NAMES.rds")
View(DISEASE_SHORT_NAMES)
library(tidyverse)
library(progress)
# library(disbayes) ## Install
# relative_path_gbd <- "~/scratch/chronic"
# relative_path_execute <- "~/scratch/chronic/mh-execute"
relative_path_execute <- paste0(mypath,'mh-execute')
library(tidyverse)
library(progress)
# library(disbayes) ## Install
# relative_path_gbd <- "~/scratch/chronic"
# relative_path_execute <- "~/scratch/chronic/mh-execute"
relative_path_execute <- "~/mh-execute"
relative_path_gbd <- paste0(mypath,'mh-mslt/input/gbd/GBD2017/METAHIT/')
library(tidyverse)
library(progress)
# library(disbayes) ## Install
# relative_path_gbd <- "~/scratch/chronic"
# relative_path_execute <- "~/scratch/chronic/mh-execute"
relative_path_execute <- "~/mh-execute"
relative_path_gbd <- "~mh-mslt/input/gbd/GBD2017/METAHIT/"
library(tidyverse)
library(progress)
# library(disbayes) ## Install
# relative_path_gbd <- "~/scratch/chronic"
# relative_path_execute <- "~/scratch/chronic/mh-execute"
relative_path_execute <- "~/mh-execute"
relative_path_gbd <- "~/mh-mslt/input/gbd/GBD2017/METAHIT/"
names_non_cr <- c("United Kingdom", "England", "East Midlands", "East of England", "Greater London", "North East England",
'North West England', "South East England", "South West England", "West Midlands", "Yorkshire and the Humber",
"Northern Ireland", "Scotland", "Wales")
local_government_areas <- read_csv(file.path(relative_path_execute, "inputs/mh_regions_lad_lookup.csv"))
library(tidyverse)
library(progress)
rm(list = ls())
# library(disbayes) ## Install
# relative_path_gbd <- "~/scratch/chronic"
# relative_path_execute <- "~/scratch/chronic/mh-execute"
relative_path_execute <- paste0(getwd(), "/mh-execute")
relative_path_gbd <- paste0(getwd(), "/mh-mslt/input/gbd/GBD2017/METAHIT")
library(tidyverse)
library(progress)
rm(list = ls())
# library(disbayes) ## Install
# relative_path_gbd <- "~/scratch/chronic"
# relative_path_execute <- "~/scratch/chronic/mh-execute"
setwd("C/:Metahit")
library(tidyverse)
library(progress)
rm(list = ls())
# library(disbayes) ## Install
# relative_path_gbd <- "~/scratch/chronic"
# relative_path_execute <- "~/scratch/chronic/mh-execute"
setwd("C/:Metahit")
library(tidyverse)
library(progress)
rm(list = ls())
# library(disbayes) ## Install
# relative_path_gbd <- "~/scratch/chronic"
# relative_path_execute <- "~/scratch/chronic/mh-execute"
wd <- getwd()
relative_path_execute <- paste0(wd, "/mh-execute")
relative_path_gbd <- paste0(wd, "/mh-mslt/input/gbd/GBD2017/METAHIT")
